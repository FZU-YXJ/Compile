     ×´Ì¬Õ»                                            ·ûºÅÕ»                                                                                                                                                ÊäÈë´®                                                                          
1    0                                                 #                                                                                                                                                     { INT ID ; INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
2    0 10                                              # {                                                                                                                                                   INT ID ; INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
3    0 10 25                                           # { INT                                                                                                                                               ID ; INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
4    0 10 25 57                                        # { INT ID                                                                                                                                            ; INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
5    0 10 25 57 99                                     # { INT ID ;                                                                                                                                          INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
6    0 10 32                                           # { decl                                                                                                                                              INT ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
7    0 10 32 25                                        # { decl INT                                                                                                                                          ID ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
8    0 10 32 25 57                                     # { decl INT ID                                                                                                                                       ; ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
9    0 10 32 25 57 99                                  # { decl INT ID ;                                                                                                                                     ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
10   0 10 32 32                                        # { decl decl                                                                                                                                         ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
11   0 10 32 63                                        # { decl decls                                                                                                                                        ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
12   0 10 33                                           # { decls                                                                                                                                             ID = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
13   0 10 33 23                                        # { decls ID                                                                                                                                          = NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
14   0 10 33 23 55                                     # { decls ID =                                                                                                                                        NUM ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
15   0 10 33 23 55 26                                  # { decls ID = NUM                                                                                                                                    ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
16   0 10 33 23 55 39                                  # { decls ID = primary                                                                                                                                ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
17   0 10 33 23 55 45                                  # { decls ID = unary                                                                                                                                  ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
18   0 10 33 23 55 44                                  # { decls ID = term                                                                                                                                   ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
19   0 10 33 23 55 35                                  # { decls ID = expr                                                                                                                                   ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
20   0 10 33 23 55 40                                  # { decls ID = rel                                                                                                                                    ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
21   0 10 33 23 55 34                                  # { decls ID = equality                                                                                                                               ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
22   0 10 33 23 55 86                                  # { decls ID = assignment                                                                                                                             ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
23   0 10 33 29                                        # { decls assignment                                                                                                                                  ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
24   0 10 33 31                                        # { decls bool                                                                                                                                        ; ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
25   0 10 33 31 62                                     # { decls bool ;                                                                                                                                      ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
26   0 10 33 36                                        # { decls expression_statement                                                                                                                        ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
27   0 10 33 42                                        # { decls stmt                                                                                                                                        ID = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
28   0 10 33 42 23                                     # { decls stmt ID                                                                                                                                     = NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
29   0 10 33 42 23 55                                  # { decls stmt ID =                                                                                                                                   NUM ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
30   0 10 33 42 23 55 26                               # { decls stmt ID = NUM                                                                                                                               ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
31   0 10 33 42 23 55 39                               # { decls stmt ID = primary                                                                                                                           ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
32   0 10 33 42 23 55 45                               # { decls stmt ID = unary                                                                                                                             ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
33   0 10 33 42 23 55 44                               # { decls stmt ID = term                                                                                                                              ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
34   0 10 33 42 23 55 35                               # { decls stmt ID = expr                                                                                                                              ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
35   0 10 33 42 23 55 40                               # { decls stmt ID = rel                                                                                                                               ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
36   0 10 33 42 23 55 34                               # { decls stmt ID = equality                                                                                                                          ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
37   0 10 33 42 23 55 86                               # { decls stmt ID = assignment                                                                                                                        ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
38   0 10 33 42 29                                     # { decls stmt assignment                                                                                                                             ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
39   0 10 33 42 31                                     # { decls stmt bool                                                                                                                                   ; WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
40   0 10 33 42 31 62                                  # { decls stmt bool ;                                                                                                                                 WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
41   0 10 33 42 36                                     # { decls stmt expression_statement                                                                                                                   WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
42   0 10 33 42 42                                     # { decls stmt stmt                                                                                                                                   WHILE ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
43   0 10 33 42 42 28                                  # { decls stmt stmt WHILE                                                                                                                             ( ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } # 
44   0 10 33 42 42 28 60                               # { decls stmt stmt WHILE (                                                                                                                           ID < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #   
45   0 10 33 42 42 28 60 88                            # { decls stmt stmt WHILE ( ID                                                                                                                        < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #      
46   0 10 33 42 42 28 60 94                            # { decls stmt stmt WHILE ( primary                                                                                                                   < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #      
47   0 10 33 42 42 28 60 97                            # { decls stmt stmt WHILE ( unary                                                                                                                     < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #      
48   0 10 33 42 42 28 60 96                            # { decls stmt stmt WHILE ( term                                                                                                                      < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #      
49   0 10 33 42 42 28 60 93                            # { decls stmt stmt WHILE ( expr                                                                                                                      < NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #      
50   0 10 33 42 42 28 60 93 121                        # { decls stmt stmt WHILE ( expr <                                                                                                                    NUM ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #        
51   0 10 33 42 42 28 60 93 121 89                     # { decls stmt stmt WHILE ( expr < NUM                                                                                                                ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
52   0 10 33 42 42 28 60 93 121 94                     # { decls stmt stmt WHILE ( expr < primary                                                                                                            ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
53   0 10 33 42 42 28 60 93 121 97                     # { decls stmt stmt WHILE ( expr < unary                                                                                                              ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
54   0 10 33 42 42 28 60 93 121 96                     # { decls stmt stmt WHILE ( expr < term                                                                                                               ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
55   0 10 33 42 42 28 60 93 121 93                     # { decls stmt stmt WHILE ( expr < expr                                                                                                               ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
56   0 10 33 42 42 28 60 93 121 150                    # { decls stmt stmt WHILE ( expr < rel                                                                                                                ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
57   0 10 33 42 42 28 60 95                            # { decls stmt stmt WHILE ( rel                                                                                                                       ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
58   0 10 33 42 42 28 60 92                            # { decls stmt stmt WHILE ( equality                                                                                                                  ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
59   0 10 33 42 42 28 60 90                            # { decls stmt stmt WHILE ( assignment                                                                                                                ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
60   0 10 33 42 42 28 60 101                           # { decls stmt stmt WHILE ( bool                                                                                                                      ) { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #            
61   0 10 33 42 42 28 60 101 133                       # { decls stmt stmt WHILE ( bool )                                                                                                                    { ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #              
62   0 10 33 42 42 28 60 101 133 47                    # { decls stmt stmt WHILE ( bool ) {                                                                                                                  ID = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                
63   0 10 33 42 42 28 60 101 133 47 23                 # { decls stmt stmt WHILE ( bool ) { ID                                                                                                               = ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                   
64   0 10 33 42 42 28 60 101 133 47 23 55              # { decls stmt stmt WHILE ( bool ) { ID =                                                                                                             ID * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                     
65   0 10 33 42 42 28 60 101 133 47 23 55 23           # { decls stmt stmt WHILE ( bool ) { ID = ID                                                                                                          * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                        
66   0 10 33 42 42 28 60 101 133 47 23 55 39           # { decls stmt stmt WHILE ( bool ) { ID = primary                                                                                                     * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                        
67   0 10 33 42 42 28 60 101 133 47 23 55 45           # { decls stmt stmt WHILE ( bool ) { ID = unary                                                                                                       * ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                        
68   0 10 33 42 42 28 60 101 133 47 23 55 45 76        # { decls stmt stmt WHILE ( bool ) { ID = unary *                                                                                                     ID ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                          
69   0 10 33 42 42 28 60 101 133 47 23 55 45 76 78     # { decls stmt stmt WHILE ( bool ) { ID = unary * ID                                                                                                  ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
70   0 10 33 42 42 28 60 101 133 47 23 55 45 76 39     # { decls stmt stmt WHILE ( bool ) { ID = unary * primary                                                                                             ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
71   0 10 33 42 42 28 60 101 133 47 23 55 45 76 45     # { decls stmt stmt WHILE ( bool ) { ID = unary * unary                                                                                               ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
72   0 10 33 42 42 28 60 101 133 47 23 55 45 76 112    # { decls stmt stmt WHILE ( bool ) { ID = unary * term                                                                                                ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
73   0 10 33 42 42 28 60 101 133 47 23 55 44           # { decls stmt stmt WHILE ( bool ) { ID = term                                                                                                        ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
74   0 10 33 42 42 28 60 101 133 47 23 55 35           # { decls stmt stmt WHILE ( bool ) { ID = expr                                                                                                        ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
75   0 10 33 42 42 28 60 101 133 47 23 55 40           # { decls stmt stmt WHILE ( bool ) { ID = rel                                                                                                         ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
76   0 10 33 42 42 28 60 101 133 47 23 55 34           # { decls stmt stmt WHILE ( bool ) { ID = equality                                                                                                    ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
77   0 10 33 42 42 28 60 101 133 47 23 55 86           # { decls stmt stmt WHILE ( bool ) { ID = assignment                                                                                                  ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
78   0 10 33 42 42 28 60 101 133 47 29                 # { decls stmt stmt WHILE ( bool ) { assignment                                                                                                       ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
79   0 10 33 42 42 28 60 101 133 47 31                 # { decls stmt stmt WHILE ( bool ) { bool                                                                                                             ; ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                             
80   0 10 33 42 42 28 60 101 133 47 31 62              # { decls stmt stmt WHILE ( bool ) { bool ;                                                                                                           ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                               
81   0 10 33 42 42 28 60 101 133 47 36                 # { decls stmt stmt WHILE ( bool ) { expression_statement                                                                                             ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                               
82   0 10 33 42 42 28 60 101 133 47 42                 # { decls stmt stmt WHILE ( bool ) { stmt                                                                                                             ID = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                               
83   0 10 33 42 42 28 60 101 133 47 42 23              # { decls stmt stmt WHILE ( bool ) { stmt ID                                                                                                          = ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                  
84   0 10 33 42 42 28 60 101 133 47 42 23 55           # { decls stmt stmt WHILE ( bool ) { stmt ID =                                                                                                        ID + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                    
85   0 10 33 42 42 28 60 101 133 47 42 23 55 23        # { decls stmt stmt WHILE ( bool ) { stmt ID = ID                                                                                                     + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                       
86   0 10 33 42 42 28 60 101 133 47 42 23 55 39        # { decls stmt stmt WHILE ( bool ) { stmt ID = primary                                                                                                + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                       
87   0 10 33 42 42 28 60 101 133 47 42 23 55 45        # { decls stmt stmt WHILE ( bool ) { stmt ID = unary                                                                                                  + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                       
88   0 10 33 42 42 28 60 101 133 47 42 23 55 44        # { decls stmt stmt WHILE ( bool ) { stmt ID = term                                                                                                   + NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                       
89   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74     # { decls stmt stmt WHILE ( bool ) { stmt ID = term +                                                                                                 NUM ; IF ( ID == NUM ) ID = NUM ; } } #                                         
90   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74 26  # { decls stmt stmt WHILE ( bool ) { stmt ID = term + NUM                                                                                             ; IF ( ID == NUM ) ID = NUM ; } } #                                             
91   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74 39  # { decls stmt stmt WHILE ( bool ) { stmt ID = term + primary                                                                                         ; IF ( ID == NUM ) ID = NUM ; } } #                                             
92   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74 45  # { decls stmt stmt WHILE ( bool ) { stmt ID = term + unary                                                                                           ; IF ( ID == NUM ) ID = NUM ; } } #                                             
93   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74 44  # { decls stmt stmt WHILE ( bool ) { stmt ID = term + term                                                                                            ; IF ( ID == NUM ) ID = NUM ; } } #                                             
94   0 10 33 42 42 28 60 101 133 47 42 23 55 44 74 110 # { decls stmt stmt WHILE ( bool ) { stmt ID = term + expr                                                                                            ; IF ( ID == NUM ) ID = NUM ; } } #                                             
95   0 10 33 42 42 28 60 101 133 47 42 23 55 35        # { decls stmt stmt WHILE ( bool ) { stmt ID = expr                                                                                                   ; IF ( ID == NUM ) ID = NUM ; } } #                                             
96   0 10 33 42 42 28 60 101 133 47 42 23 55 40        # { decls stmt stmt WHILE ( bool ) { stmt ID = rel                                                                                                    ; IF ( ID == NUM ) ID = NUM ; } } #                                             
97   0 10 33 42 42 28 60 101 133 47 42 23 55 34        # { decls stmt stmt WHILE ( bool ) { stmt ID = equality                                                                                               ; IF ( ID == NUM ) ID = NUM ; } } #                                             
98   0 10 33 42 42 28 60 101 133 47 42 23 55 86        # { decls stmt stmt WHILE ( bool ) { stmt ID = assignment                                                                                             ; IF ( ID == NUM ) ID = NUM ; } } #                                             
99   0 10 33 42 42 28 60 101 133 47 42 29              # { decls stmt stmt WHILE ( bool ) { stmt assignment                                                                                                  ; IF ( ID == NUM ) ID = NUM ; } } #                                             
100  0 10 33 42 42 28 60 101 133 47 42 31              # { decls stmt stmt WHILE ( bool ) { stmt bool                                                                                                        ; IF ( ID == NUM ) ID = NUM ; } } #                                             
101  0 10 33 42 42 28 60 101 133 47 42 31 62           # { decls stmt stmt WHILE ( bool ) { stmt bool ;                                                                                                      IF ( ID == NUM ) ID = NUM ; } } #                                               
102  0 10 33 42 42 28 60 101 133 47 42 36              # { decls stmt stmt WHILE ( bool ) { stmt expression_statement                                                                                        IF ( ID == NUM ) ID = NUM ; } } #                                               
103  0 10 33 42 42 28 60 101 133 47 42 42              # { decls stmt stmt WHILE ( bool ) { stmt stmt                                                                                                        IF ( ID == NUM ) ID = NUM ; } } #                                               
104  0 10 33 42 42 28 60 101 133 47 42 42 24           # { decls stmt stmt WHILE ( bool ) { stmt stmt IF                                                                                                     ( ID == NUM ) ID = NUM ; } } #                                                  
105  0 10 33 42 42 28 60 101 133 47 42 42 24 56        # { decls stmt stmt WHILE ( bool ) { stmt stmt IF (                                                                                                   ID == NUM ) ID = NUM ; } } #                                                    
106  0 10 33 42 42 28 60 101 133 47 42 42 24 56 88     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( ID                                                                                                == NUM ) ID = NUM ; } } #                                                       
107  0 10 33 42 42 28 60 101 133 47 42 42 24 56 94     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( primary                                                                                           == NUM ) ID = NUM ; } } #                                                       
108  0 10 33 42 42 28 60 101 133 47 42 42 24 56 97     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( unary                                                                                             == NUM ) ID = NUM ; } } #                                                       
109  0 10 33 42 42 28 60 101 133 47 42 42 24 56 96     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( term                                                                                              == NUM ) ID = NUM ; } } #                                                       
110  0 10 33 42 42 28 60 101 133 47 42 42 24 56 93     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( expr                                                                                              == NUM ) ID = NUM ; } } #                                                       
111  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel                                                                                               == NUM ) ID = NUM ; } } #                                                       
112  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel ==                                                                                            NUM ) ID = NUM ; } } #                                                          
113  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 89 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == NUM                                                                                        ) ID = NUM ; } } #                                                              
114  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 94 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == primary                                                                                    ) ID = NUM ; } } #                                                              
115  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 97 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == unary                                                                                      ) ID = NUM ; } } #                                                              
116  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 96 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == term                                                                                       ) ID = NUM ; } } #                                                              
117  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 93 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == expr                                                                                       ) ID = NUM ; } } #                                                              
118  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 95 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == rel                                                                                        ) ID = NUM ; } } #                                                              
119  0 10 33 42 42 28 60 101 133 47 42 42 24 56 95 126 155 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( rel == equality                                                                                   ) ID = NUM ; } } #                                                              
120  0 10 33 42 42 28 60 101 133 47 42 42 24 56 92     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( equality                                                                                          ) ID = NUM ; } } #                                                              
121  0 10 33 42 42 28 60 101 133 47 42 42 24 56 90     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( assignment                                                                                        ) ID = NUM ; } } #                                                              
122  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91     # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool                                                                                              ) ID = NUM ; } } #                                                              
123  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool )                                                                                            ID = NUM ; } } #                                                                
124  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID                                                                                         = NUM ; } } #                                                                   
125  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID =                                                                                       NUM ; } } #                                                                     
126  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 26 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = NUM                                                                                   ; } } #                                                                         
127  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 39 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = primary                                                                               ; } } #                                                                         
128  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 45 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = unary                                                                                 ; } } #                                                                         
129  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 44 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = term                                                                                  ; } } #                                                                         
130  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 35 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = expr                                                                                  ; } } #                                                                         
131  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 40 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = rel                                                                                   ; } } #                                                                         
132  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 34 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = equality                                                                              ; } } #                                                                         
133  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 23 55 86 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) ID = assignment                                                                            ; } } #                                                                         
134  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 29 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) assignment                                                                                 ; } } #                                                                         
135  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 143 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) bool                                                                                       ; } } #                                                                         
136  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 143 165 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) bool ;                                                                                     } } #                                                                           
137  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 144 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) expression_statement                                                                       } } #                                                                           
138  0 10 33 42 42 28 60 101 133 47 42 42 24 56 91 120 148 # { decls stmt stmt WHILE ( bool ) { stmt stmt IF ( bool ) stmt                                                                                       } } #                                                                           
139  0 10 33 42 42 28 60 101 133 47 42 42 41           # { decls stmt stmt WHILE ( bool ) { stmt stmt selection                                                                                              } } #                                                                           
140  0 10 33 42 42 28 60 101 133 47 42 42 42           # { decls stmt stmt WHILE ( bool ) { stmt stmt stmt                                                                                                   } } #                                                                           
141  0 10 33 42 42 28 60 101 133 47 42 42 72           # { decls stmt stmt WHILE ( bool ) { stmt stmt stmts                                                                                                  } } #                                                                           
142  0 10 33 42 42 28 60 101 133 47 42 72              # { decls stmt stmt WHILE ( bool ) { stmt stmts                                                                                                       } } #                                                                           
143  0 10 33 42 42 28 60 101 133 47 81                 # { decls stmt stmt WHILE ( bool ) { stmts                                                                                                            } } #                                                                           
144  0 10 33 42 42 28 60 101 133 47 81 116             # { decls stmt stmt WHILE ( bool ) { stmts }                                                                                                          } #                                                                             
145  0 10 33 42 42 28 60 101 133 30                    # { decls stmt stmt WHILE ( bool ) block                                                                                                              } #                                                                             
146  0 10 33 42 42 28 60 101 133 160                   # { decls stmt stmt WHILE ( bool ) stmt                                                                                                               } #                                                                             
147  0 10 33 42 42 37                                  # { decls stmt stmt iteration                                                                                                                         } #                                                                             
148  0 10 33 42 42 42                                  # { decls stmt stmt stmt                                                                                                                              } #                                                                             
149  0 10 33 42 42 72                                  # { decls stmt stmt stmts                                                                                                                             } #                                                                             
150  0 10 33 42 72                                     # { decls stmt stmts                                                                                                                                  } #                                                                             
151  0 10 33 64                                        # { decls stmts                                                                                                                                       } #                                                                             
152  0 10 33 64 103                                    # { decls stmts }                                                                                                                                     #                                                                               
153  0 4                                               # block                                                                                                                                               #                                                                               
154  0 7                                               # function_definition                                                                                                                                 #                                                                               
155  0 8                                               # function_definition_list                                                                                                                            #                                                                               
156  0 9                                               # program                                                                                                                                             #                                                                               
