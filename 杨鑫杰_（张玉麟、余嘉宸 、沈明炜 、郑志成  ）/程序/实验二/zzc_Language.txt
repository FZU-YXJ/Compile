program' -> program
program -> function_definition_list
program -> decls function_definition_list
function_definition_list -> function_definition
function_definition_list -> function_definition function_definition_list
function_definition -> block
return_type -> VOID
return_type -> INT
function_name -> ID ( )
function_name -> ID ( parameter_list )
parameter_list -> parameter_declaration
parameter_list -> parameter_declaration , parameter_list
parameter_declaration -> INT ID
block -> { }
block -> { decls }
block -> { stmts }
block -> { decls stmts }
decls -> decl
decls -> decl decls
decl -> INT ID ;
decl -> DOUBLE ID ;
decl -> FLOAT ID ;
stmts -> stmt
stmts -> stmt stmts
stmt -> block
stmt -> expression_statement
stmt -> selection
stmt -> iteration
stmt -> jump_statement
expression_statement -> ;
expression_statement -> bool ;
selection -> IF ( bool ) stmt
selection -> IF ( bool ) stmt ELSE stmt
iteration -> WHILE ( bool ) stmt
jump_statement -> RETURN ;
jump_statement -> RETURN bool ;
bool -> assignment
bool -> assignment , bool
assignment -> ID = assignment
assignment -> equality
equality -> rel
equality -> rel == equality
equality -> rel != equality
rel -> expr
rel -> expr < rel
rel -> expr > rel
rel -> expr <= rel
rel -> expr >= rel
expr -> term
expr -> term + expr
expr -> term - expr
term -> unary
term -> unary * term
term -> unary / term
unary -> primary
unary -> unary_operator unary
primary -> ID
primary -> NUM
primary -> ( expression )
unary_operator -> +
unary_operator -> -